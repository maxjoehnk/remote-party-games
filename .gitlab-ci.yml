image: docker:latest
services:
  - docker:dind

stages:
  - build
  - prepare-deploy
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

variables:
  WEB_CLIENT_IMAGE: $CI_REGISTRY/maxjoehnk/remote-party-games/web-client:latest
  MATCHMAKING_IMAGE: $CI_REGISTRY/maxjoehnk/remote-party-games/matchmaking:latest
  IMAGES_IMAGE: $CI_REGISTRY/maxjoehnk/remote-party-games/image:latest
  TF_ROOT: ${CI_PROJECT_DIR}/deployment
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_ENVIRONMENT_NAME}

# Docker Builds

build-web-client:
  stage: build
  script:
    - docker build --pull -t "$WEB_CLIENT_IMAGE" -f applications/web-client/Dockerfile .
    - docker push "$WEB_CLIENT_IMAGE"
  only:
    refs:
    - master
    changes:
    - applications/web-client/**/*
    - .gitlab-ci.yml

build-matchmaking:
  stage: build
  script:
    - docker build --pull -t "$MATCHMAKING_IMAGE" -f applications/matchmaking/Dockerfile .
    - docker push "$MATCHMAKING_IMAGE"
  only:
    refs:
      - master
    changes:
      - applications/matchmaking/**/*
      - .gitlab-ci.yml

build-images:
  stage: build
  script:
    - docker build --pull -t "$IMAGES_IMAGE" -f applications/image/Dockerfile .
    - docker push "$IMAGES_IMAGE"
  only:
    refs:
      - master
    changes:
      - applications/image/**/*
      - .gitlab-ci.yml

# Deployment

cache:
  key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/

prepare-deploy-beta:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: prepare-deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$BETA_SERVER $BETA_SERVER_HOST_KEY" > ~/.ssh/known_hosts
    - cd ${TF_ROOT}
  variables:
    TF_VAR_docker_host: ssh://root@$BETA_SERVER
    TF_VAR_environment: $CI_ENVIRONMENT_NAME
    TF_VAR_domain: beta.party.maxjoehnk.me
  script:
    - gitlab-terraform init
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json
  resource_group: beta
  environment:
    name: beta
    url: https://beta.party.maxjoehnk.me
    action: prepare

deploy-beta:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$BETA_SERVER $BETA_SERVER_HOST_KEY" > ~/.ssh/known_hosts
    - cd ${TF_ROOT}
  variables:
    TF_VAR_docker_host: ssh://root@$BETA_SERVER
    TF_VAR_environment: $CI_ENVIRONMENT_NAME
    TF_VAR_domain: beta.party.maxjoehnk.me
  script:
    - gitlab-terraform apply
  dependencies:
    - prepare-deploy-beta
  resource_group: beta
  environment:
    name: beta
    url: https://beta.party.maxjoehnk.me
    on_stop: stop-deploy-beta
  only:
    - master

stop-deploy-beta:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_DEPLOY_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$BETA_SERVER $BETA_SERVER_HOST_KEY" > ~/.ssh/known_hosts
    - cd ${TF_ROOT}
  variables:
    TF_VAR_docker_host: ssh://root@$BETA_SERVER
    TF_VAR_environment: $CI_ENVIRONMENT_NAME
    TF_VAR_domain: beta.party.maxjoehnk.me
  script:
    - gitlab-terraform init
    - gitlab-terraform destroy
  resource_group: beta
  environment:
    name: beta
    url: https://beta.party.maxjoehnk.me
    action: stop
  only:
    - master

deploy-live:
  stage: deploy
  script:
    - echo "deploying live system..."
  resource_group: live
  environment:
    name: live
    url: https://party.maxjoehnk.me
  when: manual
  only:
    - master
