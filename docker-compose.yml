version: '3'
services:
  web-client:
    restart: on-failure
    build:
      context: .
      dockerfile: applications/web-client/Dockerfile
    image: registry.gitlab.com/maxjoehnk/remote-party-games/web-client:latest
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.party-games-${DEPLOYMENT-live}-web-client.rule=Host(`${DOMAIN-party.maxjoehnk.me}`)"
  matchmaking:
    restart: on-failure
    build:
      context: .
      dockerfile: applications/matchmaking/Dockerfile
    image: registry.gitlab.com/maxjoehnk/remote-party-games/matchmaking:latest
    networks:
      - web
    volumes:
      - ./game_assets:/src/applications/matchmaking/assets
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.party-games-${DEPLOYMENT-live}-matchmaking.rule=Host(`${DOMAIN-party.maxjoehnk.me}`) && PathPrefix(`/api`)"
  image:
    restart: on-failure
    build:
      context: .
      dockerfile: applications/image/Dockerfile
    image: registry.gitlab.com/maxjoehnk/remote-party-games/image:latest
    environment:
      MATCHMAKING_URL: http://matchmaking:8090
    networks:
      - web
    volumes:
      - images:/etc/party-games/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.party-games-${DEPLOYMENT-live}-image.rule=Host(`${DOMAIN-party.maxjoehnk.me}`) && PathPrefix(`/api/image`)"
volumes:
  images:

networks:
  web:
    external:
      name: web
